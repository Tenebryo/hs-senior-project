fn factorial(n : u64) -> u64 {
    if n <= 12 {
        [1,1,2,6,24,120,720,5040,40320,362880,3628800,39916800,479001600][n as usize]
    } else {
        n*factorial(n-1)
    }
}

static c_nk : [[u32; 13]; 13] = [
    [1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],
    [1,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],
    [1,   2,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],
    [1,   3,   3,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0],
    [1,   4,   6,   4,   1,   0,   0,   0,   0,   0,   0,   0,   0],
    [1,   5,  10,  10,   5,   1,   0,   0,   0,   0,   0,   0,   0],
    [1,   6,  15,  20,  15,   6,   1,   0,   0,   0,   0,   0,   0],
    [1,   7,  21,  35,  35,  21,   7,   1,   0,   0,   0,   0,   0],
    [1,   8,  28,  56,  70,  56,  28,   8,   1,   0,   0,   0,   0],
    [1,   9,  36,  84, 126, 126,  84,  36,   9,   1,   0,   0,   0],
    [1,  10,  45, 120, 210, 252, 210, 120,  45,  10,   1,   0,   0],
    [1,  11,  55, 165, 330, 462, 462, 330, 165,  55,  11,   1,   0],
    [1,  12,  66, 220, 495, 792, 924, 792, 495, 220,  66,  12,   1]
];

fn binomial(n : u32, k : u32) -> u32 {
    if n < 13 && k < 13 {
        c_nk[n as usize,k as usize]
    } else {
        factorial(n)/(factorial(k)*factorial(n-k))
    }
}